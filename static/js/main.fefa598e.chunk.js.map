{"version":3,"sources":["MainApp.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MainApp","props","useState","loading","setLoading","books","setBooks","React","Number","match","params","items","itemsPerPage","setItemsPerPage","totalItems","setTotalItems","page","pageNumber","setpageNumber","useEffect","fetchBody","encodeURIComponent","fetch","method","headers","body","then","data","json","result","count","toFixed","catch","error","console","log","Container","maxWidth","Typography","variant","color","gutterBottom","Grid","container","justifyContent","alignItems","spacing","map","book","item","xs","Card","sx","minHeight","margin","background","CardContent","noWrap","component","book_title","mb","book_author","book_publication_year","book_publication_country","book_publication_city","book_pages","id","direction","columnSpacing","FormControl","Select","value","onChange","event","history","push","target","MenuItem","Pagination","theme","createTheme","palette","primary","main","App","ThemeProvider","exact","from","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAwIeA,MAzHf,SAAiBC,GACf,MAA4BC,oBAAS,GAArC,mBAAKC,EAAL,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAKG,EAAL,KAAYC,EAAZ,KACA,EAAwCC,IAAML,SAC5CM,OAAOP,EAAMQ,MAAMC,OAAOC,QAD5B,mBAAOC,EAAP,KAAqBC,EAArB,KAGA,EAAoCN,IAAML,SAAS,IAAnD,mBAAOY,EAAP,KAAmBC,EAAnB,KACA,EAAkCb,mBAASM,OAAOP,EAAMQ,MAAMC,OAAOM,OAArE,mBAAKC,EAAL,KAAiBC,EAAjB,KAyCA,OAxCAC,qBAAU,WACRD,EAAcV,OAAOP,EAAMQ,MAAMC,OAAOM,OACxCH,EAAgBL,OAAOP,EAAMQ,MAAMC,OAAOC,QAC1C,IAAMS,EACJC,mBAAmB,QACnB,IACAA,mBAAmBpB,EAAMQ,MAAMC,OAAOM,MACtC,IACAK,mBAAmB,cACnB,IACAA,mBAAmBpB,EAAMQ,MAAMC,OAAOC,OACxCW,MAAM,wCAAyC,CAC7CC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BC,KAAML,IAELM,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACLzB,GAAW,GACXE,EAASuB,EAAOxB,OAChBU,IAAgBc,EAAOC,MAAM7B,EAAMQ,MAAMC,OAAOC,OAAOoB,QAAQ,OAEhEC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,CAAChC,EAAMQ,MAAMC,SAgBd,eAAC0B,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAAUC,cAAY,EAArD,wBAGA,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,eAAe,eACfC,WAAW,SACXC,QAAS,EAJX,UAMI3C,GACAE,EAAM0C,KAAI,SAACC,GACT,OACE,cAACN,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAU,QACVC,OAAQ,SACRC,WAAY,kBACZf,MAAO,SALX,SASE,eAACgB,EAAA,EAAD,WACE,cAAClB,EAAA,EAAD,CAAYC,QAAQ,KAAKkB,QAAM,EAACC,UAAU,MAA1C,SACGV,EAAKW,aAER,eAACrB,EAAA,EAAD,CAAYc,GAAI,CAAEQ,GAAI,KAAtB,oBACUZ,EAAKa,YAAY,GAD3B,MACkC,IAC/Bb,EAAKc,yBAER,eAACxB,EAAA,EAAD,CAAYC,QAAQ,QAApB,sBAEGS,EAAKe,yBAFR,IAGGf,EAAKgB,yBAER,eAAC1B,EAAA,EAAD,CAAYc,GAAI,CAAEQ,GAAI,KAAtB,mBACSZ,EAAKiB,kBAhBXjB,EAAKkB,KARSlB,EAAKkB,SAgCpC,eAACxB,EAAA,EAAD,CACEC,WAAS,EACTwB,UAAU,MACVC,cAAe,EACfxB,eAAe,WACfC,WAAW,SALb,UAOE,cAACH,EAAA,EAAD,CAAMO,MAAI,EAAV,SACE,kDAEF,cAACP,EAAA,EAAD,CAAMO,MAAI,EAAV,SACE,cAACoB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAQC,MAAO3D,EAAc4D,SAxEb,SAACC,GACzBxE,EAAMyE,QAAQC,KAAd,sBACiB1E,EAAMQ,MAAMC,OAAOM,KADpC,kBAEIyD,EAAMG,OAAOL,QAGjB1D,EAAgB4D,EAAMG,OAAOL,QAkErB,UACE,cAACM,EAAA,EAAD,CAAUN,MAAO,GAAjB,gBACA,cAACM,EAAA,EAAD,CAAUN,MAAO,GAAjB,gBACA,cAACM,EAAA,EAAD,CAAUN,MAAO,GAAjB,uBAIN,cAAC7B,EAAA,EAAD,CAAMO,MAAI,EAAV,SACE,cAAC6B,EAAA,EAAD,CAAYhD,MAAOhB,EAAY0B,MAAM,UAAUxB,KAAMC,EAAYuD,SAxEpD,SAACC,EAAmCF,GACvDtE,EAAMyE,QAAQC,KAAd,sBACiBJ,EADjB,kBACgCtE,EAAMQ,MAAMC,OAAOC,QAEnDO,EAAcqD,eCvDZQ,G,MAAQC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,eAmBGC,MAbf,WACE,OACI,cAACC,EAAA,EAAD,CAAeN,MAAOA,EAAtB,SACE,cAAC,IAAD,UACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAUO,OAAK,EAACC,KAAK,IAAIC,GAAG,2BAC5B,cAAC,IAAD,CAAQC,KAAK,iCAAiC/B,UAAW1D,YCPxD0F,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBlE,MAAK,YAAkD,IAA/CmE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fefa598e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"@material-ui/core/Pagination\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nfunction MainApp(props: any) {\r\n  let [loading, setLoading] = useState(true);\r\n  let [books, setBooks] = useState([]);\r\n  const [itemsPerPage, setItemsPerPage] = React.useState(\r\n    Number(props.match.params.items)\r\n  );\r\n  const [totalItems, setTotalItems] = React.useState(10);\r\n  let [pageNumber, setpageNumber] = useState(Number(props.match.params.page));\r\n  useEffect(() => {\r\n    setpageNumber(Number(props.match.params.page));\r\n    setItemsPerPage(Number(props.match.params.items));\r\n    const fetchBody =\r\n      encodeURIComponent(\"page\") +\r\n      \"=\" +\r\n      encodeURIComponent(props.match.params.page) +\r\n      \"&\" +\r\n      encodeURIComponent(\"itemsPerPa\") +\r\n      \"=\" +\r\n      encodeURIComponent(props.match.params.items);\r\n    fetch(\"http://nyx.vima.ekt.gr:3000/api/books\", {\r\n      method: \"Post\",\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      body: fetchBody,\r\n    })\r\n      .then((data) => data.json())\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setBooks(result.books);\r\n        setTotalItems(+(result.count/props.match.params.items).toFixed(0))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [props.match.params]);\r\n  const handleChangeItems = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    props.history.push(\r\n      `/books&page=${props.match.params.page}&items=${\r\n        event.target.value as number\r\n      }`\r\n    );\r\n    setItemsPerPage(event.target.value as number);\r\n  };\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    props.history.push(\r\n      `/books&page=${value}&items=${props.match.params.items}`\r\n    );\r\n    setpageNumber(value);\r\n  };\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Typography variant=\"h4\" color=\"primary\" gutterBottom>\r\n        Books List\r\n      </Typography>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        {!loading &&\r\n          books.map((book: any) => {\r\n            return (\r\n              <Grid item xs={3} key={book.id}>\r\n                <Card\r\n                  sx={{\r\n                    minHeight:\"200px\",\r\n                    margin: \"1rem 0\",\r\n                    background: \"rgb(51, 51, 51)\",\r\n                    color: \"white\",\r\n                  }}\r\n                  key={book.id}\r\n                >\r\n                  <CardContent>\r\n                    <Typography variant=\"h5\" noWrap component=\"div\">\r\n                      {book.book_title}\r\n                    </Typography>\r\n                    <Typography sx={{ mb: 1.5 }}>\r\n                      Author:{book.book_author[0]} in{\" \"}\r\n                      {book.book_publication_year}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      Location:\r\n                      {book.book_publication_country},\r\n                      {book.book_publication_city}\r\n                    </Typography>\r\n                    <Typography sx={{ mb: 1.5 }}>\r\n                      pages:{book.book_pages}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            );\r\n          })}\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        columnSpacing={2}\r\n        justifyContent=\"flex-end\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item>\r\n          <h3>Items per page</h3>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl>\r\n            <Select value={itemsPerPage} onChange={handleChangeItems}>\r\n              <MenuItem value={10}>10</MenuItem>\r\n              <MenuItem value={20}>20</MenuItem>\r\n              <MenuItem value={30}>30</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <Pagination count={totalItems} color=\"primary\" page={pageNumber} onChange={handleChange} />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MainApp;\r\n","import React from 'react';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter  as Router,Redirect,Route, Switch } from \"react-router-dom\";\nimport MainApp from \"./MainApp\"\nimport './App.scss';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#1D7874\",\n    },\n  },\n});\n\n\nfunction App() {\n  return (\n      <ThemeProvider theme={theme}>\n        <Router>\n            <Switch>\n              <Redirect exact from=\"/\" to=\"/books&page=1&items=20\" />\n              <Route  path='/books&page=:page&items=:items' component={MainApp} />\n            </Switch>\n          </Router>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}